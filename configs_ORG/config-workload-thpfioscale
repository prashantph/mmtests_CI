# MM Test Parameters
export MMTESTS="thpfioscale"


# Test disk to setup (optional)
#export TESTDISK_RAID_DEVICES=
#export TESTDISK_RAID_MD_DEVICE=/dev/md0
#export TESTDISK_RAID_OFFSET=63
#export TESTDISK_RAID_SIZE=250019532
#export TESTDISK_RAID_TYPE=raid0
#export TESTDISK_PARTITION=/dev/sda6
#export TESTDISK_FILESYSTEM=xfs
#export TESTDISK_MKFS_PARAM="-f -d agcount=8"
#export TESTDISK_MOUNT_ARGS=inode64,delaylog,logbsize=262144,nobarrier

# List of monitors
export MONITOR_FTRACE_EVENTS="kmem/mm_page_alloc_extfrag kmem/mm_fragmentation_stall compaction/mm_compaction_kcompactd_migrated compaction/mm_compaction_wakeup_kcompactd_queue compaction/mm_compaction_kcompactd_wake"
export RUN_MONITOR=yes
export MONITORS_ALWAYS=
export MONITORS_GZIP="proc-vmstat proc-buddyinfo proc-pagetypeinfo ftrace top"
export MONITORS_WITH_LATENCY="vmstat"
export MONITOR_UPDATE_FREQUENCY=10

# thpfioscale
. $SHELLPACK_INCLUDE/include-sizes.sh
get_numa_details
export THPFIOSCALE_FIO_THREADS=4
export THPFIOSCALE_MIN_THREADS=$((((NUMCPUS/NUMNODES)-THPFIOSCALE_FIO_THREADS)/4))
export THPFIOSCALE_MAX_THREADS=$THPFIOSCALE_MIN_THREADS
if [ $THPFIOSCALE_MAX_THREADS -le 0 ]; then
	die "Insufficient number of CPUs to run benchmark"
fi
export THPFIOSCALE_THP_WSETSIZE=$((${MMTESTS_NODE_SIZE[0]}*3/4))
export THPFIOSCALE_FIO_WSETSIZE=$(($MEMTOTAL_BYTES*3/2))
