### xfsrepair creates a sparse file, mounts it, creates 50 million zero-sized
### inodes, umounts and then runs xfs_repair on the filesystem image. This
### drives an extremely large number of read IOPS through multiple threads
### using direct IO. As well as being a reasonable benchmark based on a
### parallel IO workload, it's surprisingly sensitive to interference from
### automatic NUMA balancing. xfsrepair performance does not depend heavily
### on good memory locality but it can suffer badly if automatic NUMA
### balancing gets in the way.

# MM Test Parameters
export MMTESTS="xfsrepair"

# Test disk to setup (optional)
#export TESTDISK_RAID_DEVICES=
#export TESTDISK_RAID_MD_DEVICE=/dev/md0
#export TESTDISK_RAID_OFFSET=63
#export TESTDISK_RAID_SIZE=250019532
#export TESTDISK_RAID_TYPE=raid0
#export TESTDISK_PARTITION=/dev/sda6
#export TESTDISK_FILESYSTEM=ext3
#export TESTDISK_MKFS_PARAM="-f -d agcount=8"
#export TESTDISK_MOUNT_ARGS=inode64,delaylog,logbsize=262144,nobarrier

# List of monitors
export RUN_MONITOR=yes
export MONITORS_ALWAYS=
export MONITORS_GZIP="proc-vmstat top"
export MONITORS_WITH_LATENCY="vmstat iostat"
export MONITOR_UPDATE_FREQUENCY=10

# XFS repair
export XFSREPAIR_THREADS=4
export XFSREPAIR_ITERATIONS=3
