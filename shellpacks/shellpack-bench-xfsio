#!/bin/bash
P=xfsio-bench
DEFAULT_VERSION=0
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=
TASKSET_ALL=
SERVERSIDE_COMMAND=none
SERVERSIDE_NAME=`date +%Y%m%d-%H%M-%S`

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--serverside-command)
		SERVERSIDE_COMMAND=$2
		shift 2
		;;
	--serverside-name)
		SERVERSIDE_NAME=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--iterations)
		XFSIO_ITERATIONS=$2
		shift 2
		;;
	--size)
		XFSIO_SIZE=$2
		shift 2
		;;
	--testcases)
		XFSIO_TESTCASES=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi
# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

install-depends xfsprogs
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo xfsio installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

XFSIO_TESTCASES=`echo $XFSIO_TESTCASES | tr ',' ' '`

for TESTCASE in $XFSIO_TESTCASES; do

	# Prepare step
	case $TESTCASE in
	pwrite-single-rewrite-async)
		echo Writing file first, no measurement
		xfs_io -f -c "pwrite 0 $XFSIO_SIZE" $SHELLPACK_DATA/file |
			tee -a $TESTCASE-setup
		;;
	esac

	monitor_pre_hook $LOGDIR_RESULTS $TESTCASE
for ITERATION in `seq 1 $XFSIO_ITERATIONS`; do
	mmtests_wait_token "iteration_begin"
	mmtests_activity iteration $ITERATION
	case $TESTCASE in
	pwrite-single-async)
		$TIME_CMD -o $LOGDIR_RESULTS/$TESTCASE-time.$ITERATION \
			xfs_io -f -c "pwrite 0 $XFSIO_SIZE" $SHELLPACK_DATA/file |
				tee -a $LOGDIR_RESULTS/$TESTCASE-log.$ITERATION
		rm $SHELLPACK_DATA/file
		sync
		;;
	pwrite-single-rewrite-async)
		$TIME_CMD -o $LOGDIR_RESULTS/$TESTCASE-time.$ITERATION \
			xfs_io -f -c "pwrite 0 $XFSIO_SIZE" $SHELLPACK_DATA/file |
				tee -a $LOGDIR_RESULTS/$TESTCASE-log.$ITERATION
		;;
	*)
		die Unrecognised testcase $TESTCASE
		;;
	esac
sync
mmtests_wait_token "iteration_end"
done
	rm $SHELLPACK_DATA/file*
	monitor_post_hook $LOGDIR_RESULTS $TESTCASE
done

exit $SHELLPACK_SUCCESS
