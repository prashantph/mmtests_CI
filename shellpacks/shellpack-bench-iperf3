#!/bin/bash
# This script installs iperf and runs the regression tests
P=iperf3-bench
DEFAULT_VERSION=3.1.3
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi
IPV_SWITCH=-4

TASKSET_SERVER=
TASKSET_CLIENT=
SERVER_HOST=127.0.0.1
if [ "$REMOTE_SERVER_HOST" != "" ]; then
	SERVER_HOST=$REMOTE_SERVER_HOST
fi

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=
TASKSET_ALL=
SERVERSIDE_COMMAND=none
SERVERSIDE_NAME=`date +%Y%m%d-%H%M-%S`

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--serverside-command)
		SERVERSIDE_COMMAND=$2
		shift 2
		;;
	--serverside-name)
		SERVERSIDE_NAME=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--bind-pinned)
		CPUA=`numactl --hardware | grep ^node | grep cpus: | head -1 | awk '{print $4}'`
		TASKSET_SERVER="taskset -c $CPUA"
		TASKSET_CLIENT="taskset -c $CPUA"
		TASKSET_ALL="taskset -c $CPUA"
		shift
		;;
	--bind-cross-node)
		CPUA=`numactl --hardware | grep ^node | grep cpus: | head -1 | awk '{print $4}'`
		CPUB=`numactl --hardware | grep ^node | grep cpus: | tail -1 | awk '{print $NF}'`
		TASKSET_SERVER="taskset -c $CPUA"
		TASKSET_CLIENT="taskset -c $CPUB"
		TASKSET_ALL="taskset -c $CPUA,$CPUB"
		shift
		;;
	--bind-cross-socket)
		CPUA=`numactl --hardware | grep ^node | grep cpus: | head -1 | awk '{print $4}'`
		CPUB=`list-cpu-siblings.pl $CPUA cores 0 | awk -F , '{print $1}'`
		TASKSET_SERVER="taskset -c $CPUA"
		TASKSET_CLIENT="taskset -c $CPUB"
		TASKSET_ALL="taskset -c $CPUA,$CPUB"
		shift
		;;
	--bind-cross-ht)
		CPUA=`numactl --hardware | grep ^node | grep cpus: | head -1 | awk '{print $4}'`
		CPUB=`list-cpu-siblings.pl $CPUA threads 0 | awk -F , '{print $1}'`
		if [ "$CPUB" = "" ]; then
			echo ERROR: Could not identify HT thread for CPU $CPUA
			exit $SHELLPACK_ERROR
		fi
		TASKSET_SERVER="taskset -c $CPUA"
		TASKSET_CLIENT="taskset -c $CPUB"
		TASKSET_ALL="taskset -c $CPUA,$CPUB"
		shift
		;;
	--protocol)
		IPERF_PROTOCOL=$2
		shift 2
		;;
	--msg-size)
		IPERF_MESSAGE_SIZE=$2
		shift 2
		;;
	--msg-rate)
		IPERF_MESSAGE_RATE=$2
		shift 2
		;;
	--min-client)
		IPERF_MIN_CLIENTS=$2
		shift 2
		;;
	--max-client)
		IPERF_MAX_CLIENTS=$2
		shift 2
		;;
	--duration)
		IPERF_DURATION=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi
# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/iperf3-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/iperf3-${VERSION}-installed ]; then
	mmtests_activity source-install
	$SHELLPACK_INCLUDE/shellpack-install-iperf3 -v ${VERSION}  || die iperf3 install script returned error
	mmtests_activity source-installed
fi
cd $SHELLPACK_SOURCES/iperf3-${VERSION}-installed || die Failed to cd to iperf3 install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo iperf3 installed only as requested.
	exit $SHELLPACK_SUCCESS
fi
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo iperf3 installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

BUFFER_SIZES=`echo $BUFFER_SIZES | sed -e 's/,/ /g'`

export REMOTE_SERVER_SCRIPT=$SCRIPTDIR/shellpacks/shellpack-bench-iperf3
case $SERVERSIDE_COMMAND in
start)
	if [ -e /tmp/iperf3.pid ]; then
		IPERF3_PID=`cat /tmp/iperf3.pid`
		echo Killing server pid $IPERF3_PID
		kill $IPERF3_PID
		rm /tmp/iperf3.pid
	fi

	echo Starting server
	mmtests_activity iperf3-$SERVERSIDE_NAME
	monitor_pre_hook $LOGDIR_RESULTS iperf3-$SERVERSIDE_NAME
	IPERFROOT=$SHELLPACK_SOURCES/iperf3-${VERSION}-installed 
	$TASKSET_SERVER $IPERFROOT/bin/iperf3 -s $PROTO -D $IPV_SWITCH -I /tmp/iperf3.pid || die "Failed to start iperf3 server"
	exit $SHELLPACK_SUCCESS
	;;
stop)
	monitor_post_hook $LOGDIR_RESULTS iperf3-$SERVERSIDE_NAME
	if [ -e /tmp/iperf3.pid ]; then
		IPERF3_PID=`cat /tmp/iperf3.pid`
		echo Killing server pid $IPERF3_PID
		kill $IPERF3_PID
		rm /tmp/iperf3.pid
	fi
	exit $SHELLPACK_SUCCESS
	;;
flush)
	exit $SHELLPACK_SUCCESS
	;;
none)
	if [ -e /tmp/iperf3.pid ]; then
		IPERF3_PID=`cat /tmp/iperf3.pid`
		echo Killing server pid $IPERF3_PID
		kill $IPERF3_PID
		rm /tmp/iperf3.pid
	fi

	echo Starting server
	IPERFROOT=$SHELLPACK_SOURCES/iperf3-${VERSION}-installed 
	$TASKSET_SERVER $IPERFROOT/bin/iperf3 -s $PROTO -D $IPV_SWITCH || die "Failed to start iperf3 server"
	sleep 2
	;;
*)
	die "Unrecognised server-side command"
	;;
esac

NR_THREADS=$IPERF_MIN_CLIENTS
if [ "$NR_THREADS" = "" ]; then
	NR_THREADS=1
fi
THREADS=$NR_THREADS
NR_THREADS=$((NR_THREADS*2))
if [ "$MMTESTS_THREAD_CUTOFF" != "" ]; then
	echo Forcing IPERF_MAX_CLIENTS to $MMTESTS_THREAD_CUTOFF
	IPERF_MAX_CLIENTS=$MMTESTS_THREAD_CUTOFF
fi
while [ $NR_THREADS -le $IPERF_MAX_CLIENTS ]; do
	THREADS="$THREADS $NR_THREADS"
	NR_THREADS=$((NR_THREADS*2))
done
if [ `echo $THREADS | awk '{print $NF}'` -ne $IPERF_MAX_CLIENTS ]; then
	THREADS="$THREADS $IPERF_MAX_CLIENTS"
fi
for NR_THREADS in $THREADS; do
	if [ $NR_THREADS -gt $IPERF_MAX_CLIENTS ]; then
		NR_THREADS=$IPERF_MAX_CLIENTS
	fi
	mmtests_server_ctl start --serverside-name $IPERF_PROTOCOL-$IPERF_MESSAGE_SIZE-$IPERF_MESSAGE_RATE
	mmtests_activity msg-$IPERF_MESSAGE_SIZE-$RATE
	PROTOCOL_OPT=
	MSGSIZE_OPT="-l $IPERF_MESSAGE_SIZE"
	MSGRATE_OPT="-b $IPERF_MESSAGE_RATE"
	DURATION_OPT="-t $IPERF_DURATION"
	SOCKETSIZE_OPT=

	if [ "$IPERF_PROTOCOL" = "udp" ]; then
		PROTOCOL_OPT="-u"
	fi
		
	IPERF3_OPTS="-c $SERVER_HOST \
		$MSGSIZE_OPT $MSGRATE_OPT $SOCKETSIZE_OPT \
		$PROTOCOL_OPT $DURATION_OPT \
		-P $NR_THREADS --get-server-output -V"
	echo $TASKSET_CLIENT "iperf3" $IPERF3_OPTS
	monitor_pre_hook $LOGDIR_RESULTS $IPERF_PROTOCOL-$IPERF_MESSAGE_SIZE-$IPERF_MESSAGE_RATE-$NR_THREADS
	eval $TASKSET_CLIENT $IPERFROOT/bin/iperf3 $IPERF3_OPTS \
			2>&1 > $LOGDIR_RESULTS/$IPERF_PROTOCOL-$IPERF_MESSAGE_SIZE-$IPERF_MESSAGE_RATE-$NR_THREADS \
			|| die "Failed to run iperf3"

echo "iperf perf run starts "
    	eval sh /mmtests/mmtests_CI/data_collection.sh 20 $LOGDIR_RESULTS $IPERF_PROTOCOL-$IPERF_MESSAGE_SIZE-$IPERF_MESSAGE_RATE-$NR_THREADS &
	eval date
        IPERF3_OPTS="-c $SERVER_HOST \
                $MSGSIZE_OPT $MSGRATE_OPT $SOCKETSIZE_OPT \
                $PROTOCOL_OPT -t 100 \
                -P $NR_THREADS --get-server-output -V"
        echo $TASKSET_CLIENT "iperf3" $IPERF3_OPTS
        monitor_pre_hook $LOGDIR_RESULTS $IPERF_PROTOCOL-$IPERF_MESSAGE_SIZE-$IPERF_MESSAGE_RATE-$NR_THREADS
        eval $TASKSET_CLIENT $IPERFROOT/bin/iperf3 $IPERF3_OPTS \
                        2>&1 > $LOGDIR_RESULTS/$IPERF_PROTOCOL-$IPERF_MESSAGE_SIZE-$IPERF_MESSAGE_RATE-$NR_THREADS_perf \
                        || die "Failed to run iperf3"
        eval date
	monitor_post_hook $LOGDIR_RESULTS $IPERF_PROTOCOL-$IPERF_MESSAGE_SIZE-$IPERF_MESSAGE_RATE-$NR_THREADS
	mmtests_server_ctl stop --serverside-name $IPERF_PROTOCOL-$IPERF_MESSAGE_SIZE-$IPERF_MESSAGE_RATE
done

exit $SHELLPACK_SUCCESS
