#!/bin/bash
# rt-migration
P=rtmigration-bench
DEFAULT_VERSION=v1.5
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi

CYCLICTEST_BACKGROUND=none

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=
TASKSET_ALL=
SERVERSIDE_COMMAND=none
SERVERSIDE_NAME=`date +%Y%m%d-%H%M-%S`

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--serverside-command)
		SERVERSIDE_COMMAND=$2
		shift 2
		;;
	--serverside-name)
		SERVERSIDE_NAME=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--duration)
		RTMIGRATION_DURATION=$2
		shift 2
		;;
	--check)
		RTMIGRATION_CHECK=yes
		shift
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi
# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/rttestbuild-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/rttestbuild-${VERSION}-installed ]; then
	mmtests_activity source-install
	if [ ! -e  $SHELLPACK_INCLUDE/shellpack-install-rttestbuild ]; then
		$SHELLPACK_TOPLEVEL/shellpack_src/src/refresh.sh rttestbuild
	fi
	$SHELLPACK_INCLUDE/shellpack-install-rttestbuild -v ${VERSION}  || die rttestbuild install script returned error
	mmtests_activity source-installed
fi
cd $SHELLPACK_SOURCES/rttestbuild-${VERSION}-installed || die Failed to cd to rttestbuild install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo rttestbuild installed only as requested.
	exit $SHELLPACK_SUCCESS
fi
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo rtmigration installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

RTMIGRATION_CHECK_SWITCH=
if [ "$RTMIGRATION_CHECK" = "yes" ]; then
	RTMIGRATION_CHECK_SWITCH=-c
fi

cd $SHELLPACK_SOURCES/rttestbuild-${VERSION}-installed || die "Failed to change to rttest directory"

monitor_pre_hook $LOGDIR_RESULTS $P
echo Starting rt-migration threads
echo o rt-migrate-test $RTMIGRATION_CHECK_SWITCH -r $RTMIGRATION_DURATION
./rt-migrate-test $RTMIGRATION_CHECK_SWITCH	\
	-r $RTMIGRATION_DURATION		\
	> $LOGDIR_RESULTS/rtmigration.log
RET=$?
gzip $LOGDIR_RESULTS/rtmigration.log
monitor_post_hook $LOGDIR_RESULTS $P
if [ $RET -ne 0 ]; then
	exit $SHELLPACK_ERROR
fi
exit $SHELLPACK_SUCCESS
